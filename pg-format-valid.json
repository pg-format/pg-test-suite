[
  {
    "pg": "",
    "formatted": "",
    "about": "empty graph",
    "graph": { "nodes": [], "edges": [] }
  },
  {
    "pg": " \t",
    "formatted": "",
    "about": "empty graph",
    "graph": { "nodes": [], "edges": [] }
  },
  {
    "pg": "# comment",
    "formatted": "# comment",
    "about": "empty graph",
    "graph": { "nodes": [], "edges": [] }
  },
  {
    "pg": " #",
    "about": "empty graph",
    "graph": { "nodes": [], "edges": [] }
  },
  {
    "pg": "a,b",
    "about": "node id with comma",
    "graph": {
      "nodes": [ { "id": "a,b", "labels": [], "properties": {} } ],
      "edges": []
    }
  },
  {
    "pg": "a--",
    "formatted": "a--",
    "about": "node with minus",
    "graph": {
      "nodes": [
        { "id": "a--", "labels": [], "properties": {} }
      ],
      "edges": []
    }
  },
  {
    "pg": "'\\u000A\\\"\\\\\/\\b\\f\\n\\r\\t\\'\n\r\t'",
    "about": "node with escape sequences and unquoted LF,CR,TAB",
    "graph": {
      "nodes": [
        { "id": "\n\"\\/\b\f\n\r\t'\n\r\t", "labels": [], "properties": {} }
      ],
      "edges": []
    }
  },
  {
    "pg": "a(:# -> 本-²",
    "formatted": "a(:# -> 本-²",
    "about": "node ids with special characters"
  },
  {
    "pg": "a: :b",
    "formatted": "a: :b",
    "about": "node id with colon"
  },
  {
    "pg": "a\r :b",
    "formatted": "a :b",
    "about": "plain \\r is valid line break"
  },
  {
    "pg": "a : x",
    "formatted": "a :x",
    "about": "space between colon and label"
  },
  {
    "pg": "a b:\"\"",
    "formatted": "a b:\"\"",
    "about": "empty string value"
  },
  {
    "pg": "a b:c:d",
    "formatted": "a b:c:d",
    "about": "parsed as property key \"b\" with value \"c:d\""
  },
  {
    "pg": "x\nxy\r\nxyz # comment\n\"X\"",
    "formatted": "x\nxy\nxyz # comment\n\"X\"",
    "about": "folded line"
  },
  {
    "pg": "x\n#\n :y",
    "about": "folded line with comment in between"
  },
  {
    "pg": "a -> b a:\"\",2\t, -2e2,null ,\n xyz # comment",
    "formatted": "a -> b a:\"\",2,-200,null,xyz # comment",
    "about": "value list"
  },
  {
    "pg": "http://example.org/",
    "formatted": "http://example.org/",
    "about": "plain URI as node ID"
  },
  {
    "pg": "\"\\u1234\"",
    "formatted": "\"\\u1234\"",
    "about": "Unicode escape sequence"
  },
  {
    "pg": "\"\n \r \t\"",
    "formatted": "\"\n \r \t\"",
    "about": "multiline string"
  },
  {
    "pg": "2 -> 3",
    "formatted": "2 -> 3",
    "about": "edge identifier"
  },
  {
    "pg": "1: 2 -> 3",
    "formatted": "1: 2 -> 3",
    "about": "edge identifier"
  },
  {
    "pg": "1: -> 2",
    "formatted": "1: -> 2",
    "about": "edge with first identifier ending in colon"
  },
  {
    "pg": "a\u00A0b",
    "formatted": "a\u00A0b",
    "about": "non-break space is no space"
  },
  {
    "pg": "a\uFEFFb",
    "formatted": "a\uFEFFb",
    "about": "zero-width space is no space"
  },
  {
    "pg": "'\\\"'",
    "graph": { "nodes": [ { "id": "\"", "labels": [], "properties": {} } ], "edges": [] }
  },
  {
    "pg": "\"\\\"\"",
    "graph": { "nodes": [ { "id": "\"", "labels": [], "properties": {} } ], "edges": [] }
  },
  {
    "pg": "'\\''",
    "graph": { "nodes": [ { "id": "'", "labels": [], "properties": {} } ], "edges": [] }
  },
  {
    "pg": "\"\\'\"",
    "graph": { "nodes": [ { "id": "'", "labels": [], "properties": {} } ], "edges": [] }
  },
  {
    "pg": "a: b -> c",
    "graph": {
      "nodes": [
        { "id": "b", "labels": [], "properties": {} }, 
        { "id": "c", "labels": [], "properties": {} } 
      ],
      "edges": [ {"id": "a", "from": "b", "to": "c", "labels": [], "properties": {} } ]
    }
  },
  {
    "pg": "\"a\": b -> c",
    "graph": {
      "nodes": [
        { "id": "b", "labels": [], "properties": {} }, 
        { "id": "c", "labels": [], "properties": {} } 
      ],
      "edges": [ {"id": "a", "from": "b", "to": "c", "labels": [], "properties": {} } ]
    }
  },
  {
    "pg": "a:b: b -> c",
    "graph": {
      "nodes": [
        { "id": "b", "labels": [], "properties": {} }, 
        { "id": "c", "labels": [], "properties": {} } 
      ],
      "edges": [ {"id": "a:b", "from": "b", "to": "c", "labels": [], "properties": {} } ]
    }
  },
  {
    "pg": "a :01 x:42 x:foo x:true",
    "graph": {
      "nodes": [ { "id": "a", "labels": ["01"], "properties": { "x": [42,"foo",true] } } ],
      "edges": []
    }
  },
  {
    "pg": "a key:2#comment",
    "graph": {
      "nodes": [ { "id": "a", "labels": [], "properties": { "key": [2] } } ],
      "edges": []
    }
  },
  {
    "pg": "a,a k,k:v,w",
    "about": "Commas are allowed after the second character of unquoted IDs and property keys",
    "graph": {
      "nodes":[{"id":"a,a","labels":[],"properties":{"k,k":["v","w"]}}],
      "edges": []
    }
  },
  {
    "pg": "a' k':v'",
    "about": "Apostrophes are allowed after the second character of unquoted IDs and property keys",
    "graph": {
      "nodes":[{"id":"a'","labels":[],"properties":{"k'":["v'"]}}],
      "edges": []
    }
  },
  {
    "pg": "; ;:;",
    "about": "Semicolon is allowed in unuqoted strings",
    "graph": {
      "nodes":[{"id":";","labels":[],"properties":{";":[";"]}}],
      "edges": []
    }
  }
]
